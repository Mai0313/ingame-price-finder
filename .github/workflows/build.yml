name: Build Executable File

on:
  push:
    tags:
      - v*

permissions: write-all

jobs:
  build_package:
    name: Build Executable File
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest

    steps:
      - name: Disable SSL Verify
        run: git config --global http.sslVerify false

      - name: Checkout
        uses: actions/checkout@v4.1.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.10'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.lock
          pip install pyinstaller

      - name: Packaging to Executable file
        run: |
          pyinstaller -F main.py --onefile -n main

      - name: Move and Rename
        shell: pwsh
        run: |
          Copy-Item -Path ./* -Destination ./dist/ -Recurse -Exclude dist, .git, .cache

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          path: ./dist/*
          name: ${{ github.event.repository.name }}
          if-no-files-found: ignore
          retention-days: 7
          compression-level: 6
          overwrite: true

      - name: List files
        shell: pwsh
        run: |
          Get-ChildItem -Path .

  upload_artifacts:
    name: Upload Release Assets
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build_package
    runs-on: ubuntu-latest
    # container: catthehacker/ubuntu:act-20.04  # Uncomment it if you use it on Gitea

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          name: ${{ github.event.repository.name }}

      - name: Get the version
        if: startsWith(github.ref, 'refs/tags/v')
        id: metadata
        uses: battila7/get-version-action@v2

      - name: Check Files
        run: |
          cd ..
          zip -r ${{ github.event.repository.name }}_${{ steps.metadata.outputs.version }}.zip ${{ github.event.repository.name }}
          ls -al
          cp -R ${{ github.event.repository.name }}_${{ steps.metadata.outputs.version }}.zip ./${{ github.event.repository.name }}/

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        # continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ github.event.repository.name }}_${{ steps.metadata.outputs.version }}.zip
